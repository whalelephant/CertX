syntax = "proto3";
package whalelephant.certx.credential;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1
import "credential/recvProof.proto";

option go_package = "github.com/whalelephant/certX/certX/x/credential/types";

// Query defines the gRPC querier service.
service Query {
    // this line is used by starport scaffolding # 2

	// Queries a recvProof by id.
	rpc RecvProof(QueryGetRecvProofRequest) returns (QueryGetRecvProofResponse) {
		option (google.api.http).get = "/whalelephant/certx/credential/recvProof/{id}";
	}

	// Queries a list of recvProof items.
	rpc RecvProofAll(QueryAllRecvProofRequest) returns (QueryAllRecvProofResponse) {
		option (google.api.http).get = "/whalelephant/certx/credential/recvProof";
	}

}

// this line is used by starport scaffolding # 3
message QueryGetRecvProofRequest {
	uint64 id = 1;
}

message QueryGetRecvProofResponse {
	RecvProof RecvProof = 1;
}

message QueryAllRecvProofRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRecvProofResponse {
	repeated RecvProof RecvProof = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
